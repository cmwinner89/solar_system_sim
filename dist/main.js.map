{"version":3,"sources":["webpack://solar_system_simul_js/./src/scripts/canvas.js","webpack://solar_system_simul_js/webpack/bootstrap","webpack://solar_system_simul_js/webpack/runtime/compat get default export","webpack://solar_system_simul_js/webpack/runtime/define property getters","webpack://solar_system_simul_js/webpack/runtime/hasOwnProperty shorthand"],"names":["canvas","document","getElementById","ctx","getContext","isIntersect","point","planet","console","log","Math","sqrt","x","y","radius","width","height","planets","Planet","planetId","color","velocity","orbitRadius","this","startPos","radian","beginPath","lineWidth","arc","PI","strokeStyle","stroke","closePath","fillStyle","fill","draw","cos","sin","getPlanets","push","animate","requestAnimationFrame","clearRect","fillRect","forEach","update","addEventListener","e","mousePos","clientX","offsetLeft","clientY","offsetTop","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"mappings":"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","file":"main.js","sourcesContent":["// class canvasExample {\r\n//     constructor(props) {\r\n//        x,  y, height, width\r\n// const coords = [10, 10, 150, 100];\r\n// const coords = [0, 0, 350, 350];\r\n// const animationDir = 1;\r\n// const fillColor = `yellow`;\r\n// const canvas = document.getElementById(\"main-canvas\");\r\n// // canvas.width = window.innerWidth * 0.75;\r\n// canvas.width = window.innerWidth;\r\n// canvas.height = canvas.width / 2;\r\n// const center = [canvas.width / 2, canvas.height / 2]\r\n// const ctx = canvas.getContext(\"2d\");\r\n// const coords = [...center, 350, 350];\r\n\r\n\r\n// ctx.beginPath();\r\n// ctx.arc(...center, 50, 0, 2 * Math.PI);\r\n// ctx.fillStyle = fillColor;\r\n// ctx.fill();\r\n// ctx.stroke();\r\n\r\n// const fillColor = `yellow`;\r\n// const canvas = document.getElementById(\"main-canvas\");\r\n// // canvas.width = window.innerWidth * 0.75;\r\n// canvas.width = window.innerWidth;\r\n// canvas.height = canvas.width / 2;\r\n// const center = [canvas.width / 2, canvas.height / 2]\r\n// const ctx = canvas.getContext(\"2d\");\r\n// const coords = [...center, 350, 350];\r\n\r\n// // ctx.fillStyle = fillColor;\r\n// // ctx.fillRect(...coords);\r\n// ctx.beginPath();\r\n// ctx.arc(...center, 25, 0, 2 * Math.PI);\r\n// ctx.fillStyle = fillColor;\r\n// ctx.fill();\r\n// ctx.stroke();\r\n\r\n// ctx.beginPath();\r\n// // ctx.arc(150, -150, 5, 0, 2 * Math.PI);\r\n// ctx.arc(20, -20, 5, 0, 2 * Math.PI);\r\n// ctx.fillStyle = \"red\";\r\n// ctx.fill();\r\n// ctx.stroke();\r\n\r\n// ctx.beginPath();\r\n// ctx.arc(...center, 90, 0, 2 * Math.PI);\r\n// // ctx.fillStyle = fillColor;\r\n// // ctx.fill();\r\n// ctx.stroke();\r\n\r\n// function rotateSun() {\r\n\r\n//   console.log(\"TICK\");\r\n//   console.log(ctx);\r\n\r\n//   ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n//   // ctx.fillRect(...coords);\r\n//   ctx.save();\r\n//   ctx.translate(canvas.width / 2, canvas.height / 2);\r\n//   ctx.rotate(-Math.PI / 180 * 20)\r\n//   ctx.fillStyle = fillColor;\r\n//   // ctx.fillRect(...coords);\r\n//   //rotates sqaure\r\n//   // ctx.fillRect(-175, -175, 350, 350);\r\n//   ctx.beginPath();\r\n//   ctx.arc(0, 0, 25, 0, 2 * Math.PI);\r\n//   ctx.fillStyle = fillColor;\r\n//   ctx.fill();\r\n//   ctx.stroke();\r\n\r\n//   //draw triangle \r\n//   ctx.beginPath();\r\n//   canvas_arrow(ctx, 30, 200, 35, 0);\r\n//   ctx.stroke();\r\n//   // save();\r\n//   //save canvas back to origin position\r\n//   ctx.translate(-canvas.width / 2, -canvas.height / 2);\r\n//   // ctx.rotate(Math.PI / 180 * 20);\r\n//   ctx.save();\r\n\r\n//   // ctx.restore();\r\n//   ctx.translate(1000, 1000);\r\n//   ctx.rotate(-Math.PI / 180 * 4.1);\r\n//   ctx.translate(50, 0);\r\n//   // ctx.save();\r\n//   // ctx.beginPath();\r\n//   // ctx.lineTo(50,0);\r\n//   // ctx.stroke();\r\n//   // ctx.restore();\r\n//   mercury();\r\n//   ctx.save();\r\n//   // rotateMercury();\r\n//   ctx.restore();\r\n//   ctx.restore();\r\n//   // ctx.restore();\r\n//   // window.requestAnimationFrame(rotateSun);\r\n// }\r\n\r\n// function canvas_arrow(ctx, fromx, fromy, tox, toy) {\r\n//   var headlen = 10; // length of head in pixels\r\n//   var dx = tox - fromx;\r\n//   var dy = toy - fromy;\r\n//   var angle = Math.atan2(dy, dx);\r\n\r\n//   // context.moveTo(fromx, fromy);\r\n//   //tail of arrow change 35 based off radius of curcle\r\n//   ctx.arc(0, 0, 35, 0, Math.PI);\r\n//   ctx.moveTo(tox, toy);\r\n//   //arrows for arrow\r\n//   ctx.lineTo(tox, toy);\r\n//   ctx.lineTo(tox - headlen * Math.cos(angle - Math.PI / 6), toy - headlen * Math.sin(angle - Math.PI / 6));\r\n//   ctx.moveTo(tox, toy);\r\n//   ctx.lineTo(tox - headlen * Math.cos(angle + Math.PI / 6), toy - headlen * Math.sin(angle + Math.PI / 6));\r\n// }\r\n\r\n// function mercury() {\r\n//   // ctx.save();\r\n\r\n//   // ctx.translate(50, 0);\r\n//   ctx.beginPath();\r\n//   // ctx.arc(150, -150, 5, 0, 2 * Math.PI);\r\n//   ctx.arc(20, -20, 25, 0, 2 * Math.PI);\r\n//   ctx.fillStyle = \"red\";\r\n//   ctx.fill();\r\n//   ctx.stroke();\r\n\r\n//   // save();\r\n//   //save canvas back to origin position\r\n\r\n//   // ctx.rotate(-Math.PI / 180 * 20);\r\n// }\r\n\r\n// function rotateMercury() {\r\n\r\n//   ctx.rotate(-Math.PI / 180 * 90)\r\n//   // ctx.translate(0, 28.5)`\r\n//   ctx.beginPath();\r\n//   canvas_arrow(ctx, 30, 200, 35, 0);\r\n//   ctx.stroke();\r\n//   ctx.translate(-canvas.width / 2, -canvas.height / 2);\r\n//   // ctx.save();\r\n\r\n// }\r\n\r\n// function draw() {\r\n//   mercuryOrbitPattern();\r\n// }\r\n\r\n// function init() {\r\n//   // window.requestAnimationFrame(rotateSun);\r\n//   // draw();\r\n//   // setInterval(rotateMercury, 500);\r\n//   setInterval(rotateSun, 1000);\r\n// }\r\n\r\n// init();\r\n\r\n// function getJulianDate(Year, Month, Day) {\r\n//   let inputDate = new Date(Year, Month, Math.floor(day));\r\n//   let switchDate = new Date(\"1582\", \"10\", \"15\");\r\n\r\n//   let isGregorianDate = inputDate >= switchDate;\r\n\r\n//   if (Year < 0) {\r\n//     Year++;\r\n//   }\r\n\r\n//   if (Month === 1 || Month === 2) {\r\n//     Year = Year - 1;\r\n//     Month = Month + 12;\r\n//   }\r\n\r\n//   let a = Math.floor(Year / 100);\r\n//   let b = 2 - A + Math.floor(A / 4);\r\n\r\n//   if (!isGregorianDate) {\r\n//     b = 0;\r\n//   }\r\n\r\n//   return ((Math.floor(362.25 * Year)) + (Math.floor(30.6001 * (Month + 1))) + Day + 1720994.5 + b);\r\n// }\r\n\r\n// console.log(canvas);\r\n// console.log(center);\r\n//     }\r\n// createCanvas() {\r\n//   document.body.append(this.canvas);\r\n// }\r\n// drawSquare() {\r\n//   this.ctx.fillStyle = this.fillColor;\r\n//   this.ctx.fillRect(...this.coords);\r\n// }\r\n// updateSquare() {\r\n//   this.coords = this.coords.map((coord) => (coord += 1 * this.animationDir));\r\n// }\r\n\r\n// clearSquare() {\r\n//   this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n// }\r\n\r\n// reverseAnimation() {\r\n//   this.animationDir *= -1;\r\n// }\r\n// clearCanvas() {\r\n//   this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n// }\r\n// setColor(color) {\r\n//   this.fillColor = color;\r\n//   document.body.style.backgroundColor = color;\r\n//   document.body.style.filter = `brightness(150%)`;\r\n// }\r\n// }\r\n\r\n// export default canvasExample;\r\n\r\n\r\nconst canvas = document.getElementById('main-canvas');\r\nconst ctx = canvas.getContext('2d');\r\n// const something = document.getElementsByClassName('planet');\r\n// console.log(something)\r\nconsole.log(canvas);\r\n// canvas.width = window.innerWidth;\r\ncanvas.width = 1050;\r\n// canvas.height = innerHeight;\r\ncanvas.height = 850;\r\n\r\n// addEventListener('resize', () => {\r\n//   cavnas.width = innerWidth;\r\n//   cavnas.height = innerHeight;\r\n// });\r\n\r\nfunction isIntersect(point, planet) {\r\n  console.log(Math.sqrt((point.x-planet.x) ** 2 + (point.y - planet.y) ** 2))\r\n  console.log(planet.radius);\r\n  return Math.sqrt((point.x-planet.x) ** 2 + (point.y - planet.y) ** 2) < planet.radius;\r\n}\r\n\r\nfunction isClicked(pointer, planet) {\r\n  return (pointer.y > planet.y && pointer.y < planet.y + planet.radius && pointer.x > planet.x && pointer.x < planet.x + planet.radius)\r\n}\r\n\r\n\r\nclass Planet {\r\n  constructor(planetId, x, y, radius, color, velocity, orbitRadius) {\r\n    this.planetId = planetId\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = radius;\r\n    this.color = color;\r\n    this.velocity = velocity;\r\n    this.orbitRadius = orbitRadius;\r\n\r\n    this.startPos = {\r\n      x,\r\n      y\r\n    }\r\n    this.radian = 0;\r\n  }\r\n\r\n  draw() {\r\n\r\n    ctx.beginPath();\r\n    ctx.lineWidth = 2;\r\n    ctx.arc(this.startPos.x, this.startPos.y, this.orbitRadius, 0, Math.PI * 2);\r\n    ctx.strokeStyle = 'rgb(255, 255, 255, 0.35)';\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\r\n    ctx.fillStyle = this.color;\r\n    ctx.fill();\r\n    ctx.closePath();\r\n    // ctx.stroke();\r\n  }\r\n\r\n  update() {\r\n    \r\n    this.draw();\r\n    \r\n    this.radian += this.velocity;\r\n    \r\n    this.x = this.startPos.x + Math.cos(this.radian) * this.orbitRadius;\r\n    this.y = this.startPos.y + Math.sin(this.radian) * this.orbitRadius;\r\n    \r\n    // console.log(this.x);\r\n    // console.log(this.y);\r\n    // this.x += this.velocity;\r\n    // this.y += this.velocity;\r\n  }\r\n}\r\n\r\nconst getPlanets = (planetId, radius, velocity, orbitRadius, color) => \r\n  new Planet(planetId, canvas.width /2, canvas.height /2, radius, color, velocity / 1000, orbitRadius);\r\n\r\n\r\nlet planets;\r\nfunction init() {\r\n  planets = []\r\n\r\n  // planets.push(new Planet(canvas.width / 2, canvas.height / 2, 25, 'yellow', 0, 0));\r\n  // planets.push(new Planet(canvas.width / 2, canvas.height / 2, 10, 'red', 0.005, 65));\r\n  // planets.push(new Planet(canvas.width / 2, canvas.height / 2, 15, 'red', 0.005, 65));\r\n  planets.push(getPlanets(0, 15, 0, 0, 'yellow'));\r\n  planets.push(getPlanets(1, 5, 8, 45, \"red\"));\r\n  planets.push(getPlanets(2, 10, 5, 75, \"orange\"));\r\n  planets.push(getPlanets(3, 15, 4, 110, \"blue\"));\r\n  planets.push(getPlanets(4, 20, 3.5, 155, \"red\"));\r\n  planets.push(getPlanets(5, 25, 3, 205, \"orange\"));\r\n  planets.push(getPlanets(6, 20, 2.25, 255, \"yellow\"));\r\n  planets.push(getPlanets(7, 15, 2, 305, \"blue\"));\r\n  planets.push(getPlanets(8,25, 1.5, 355, \"purple\"));\r\n  planets.push(getPlanets(9, 7, 1, 405, \"gray\"));\r\n\r\n  // let planet1 = planets.filter(planet => {\r\n  //   return planet.planetId === 1;\r\n  // })\r\n  \r\n  // for (let i = 0; i < 3; i++) {\r\n  // }\r\n\r\n}\r\n\r\nfunction animate() {\r\n  requestAnimationFrame(animate);\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.fillStyle = 'rgb(0, 0, 0)';\r\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n  planets.forEach(planet => {\r\n    planet.update();\r\n  })\r\n}\r\n\r\n\r\n// console.log(planets);\r\n\r\ninit();\r\nanimate();\r\n\r\ncanvas.addEventListener('click', (e) => {\r\n  const mousePos = {\r\n    // x: e.clientX,\r\n    // y: e.clientY \r\n    x: e.clientX - canvas.offsetLeft,\r\n    y: e.clientY - canvas.offsetTop \r\n  };\r\n\r\n  console.log(\"mouse x\", mousePos.x);\r\n  console.log(\"mouse y\", mousePos.y);\r\n \r\n\r\n  planets.forEach( planet => {\r\n    console.log(\"planet x\", planet.x);\r\n    console.log(\"planet y\", planet.y);\r\n    console.log(\"isIntersect\", isIntersect(mousePos, planet));\r\n    if(isIntersect(mousePos, planet)) {\r\n     \r\n      console.log(\"PLANET CLICK\", planet.planetId);\r\n    }\r\n  });\r\n  // planets.forEach( planet => {\r\n  //   console.log(\"planet x\", planet.x);\r\n  //   console.log(\"planet y\", planet.y);\r\n  //   console.log(\"isClicked\", isClicked(mousePos, planet));\r\n  //   if(isClicked(mousePos, planet)) {\r\n     \r\n  //     console.log(\"PLANET CLICK\", planet.planetId);\r\n  //   }\r\n  // });\r\n})\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"sourceRoot":""}