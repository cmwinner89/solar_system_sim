{"version":3,"sources":["webpack://solar_system_simul_js/./src/scripts/canvas.js","webpack://solar_system_simul_js/./src/scripts/modal.js","webpack://solar_system_simul_js/webpack/bootstrap","webpack://solar_system_simul_js/webpack/runtime/compat get default export","webpack://solar_system_simul_js/webpack/runtime/define property getters","webpack://solar_system_simul_js/webpack/runtime/hasOwnProperty shorthand"],"names":["canvas","document","getElementById","ctx","getContext","details","planetP","orbitalP","tempP","planetTitle","orbitalTitle","tempTitle","isIntersect","point","planet","Math","sqrt","x","y","radius","console","log","width","height","planets","Planet","planetName","orbitPeriod","planetTemp","color","velocity","orbitRadius","this","startPos","radian","beginPath","lineWidth","arc","PI","strokeStyle","stroke","closePath","fillStyle","fill","draw","cos","sin","getPlanets","push","animate","requestAnimationFrame","clearRect","fillRect","forEach","update","addEventListener","e","mousePos","offsetX","offsetY","getAttribute","setAttribute","setTimeout","onanimationend","innerHTML","modalTriggers","querySelectorAll","bodyBlackout","querySelector","trigger","dataset","popupTrigger","popupModal","classList","add","remove","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"mappings":"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","file":"main.js","sourcesContent":["// class canvasExample {\r\n//     constructor(props) {\r\n//        x,  y, height, width\r\n// const coords = [10, 10, 150, 100];\r\n// const coords = [0, 0, 350, 350];\r\n// const animationDir = 1;\r\n// const fillColor = `yellow`;\r\n// const canvas = document.getElementById(\"main-canvas\");\r\n// // canvas.width = window.innerWidth * 0.75;\r\n// canvas.width = window.innerWidth;\r\n// canvas.height = canvas.width / 2;\r\n// const center = [canvas.width / 2, canvas.height / 2]\r\n// const ctx = canvas.getContext(\"2d\");\r\n// const coords = [...center, 350, 350];\r\n\r\n\r\n// ctx.beginPath();\r\n// ctx.arc(...center, 50, 0, 2 * Math.PI);\r\n// ctx.fillStyle = fillColor;\r\n// ctx.fill();\r\n// ctx.stroke();\r\n\r\n// const fillColor = `yellow`;\r\n// const canvas = document.getElementById(\"main-canvas\");\r\n// // canvas.width = window.innerWidth * 0.75;\r\n// canvas.width = window.innerWidth;\r\n// canvas.height = canvas.width / 2;\r\n// const center = [canvas.width / 2, canvas.height / 2]\r\n// const ctx = canvas.getContext(\"2d\");\r\n// const coords = [...center, 350, 350];\r\n\r\n// // ctx.fillStyle = fillColor;\r\n// // ctx.fillRect(...coords);\r\n// ctx.beginPath();\r\n// ctx.arc(...center, 25, 0, 2 * Math.PI);\r\n// ctx.fillStyle = fillColor;\r\n// ctx.fill();\r\n// ctx.stroke();\r\n\r\n// ctx.beginPath();\r\n// // ctx.arc(150, -150, 5, 0, 2 * Math.PI);\r\n// ctx.arc(20, -20, 5, 0, 2 * Math.PI);\r\n// ctx.fillStyle = \"red\";\r\n// ctx.fill();\r\n// ctx.stroke();\r\n\r\n// ctx.beginPath();\r\n// ctx.arc(...center, 90, 0, 2 * Math.PI);\r\n// // ctx.fillStyle = fillColor;\r\n// // ctx.fill();\r\n// ctx.stroke();\r\n\r\n// function rotateSun() {\r\n\r\n//   console.log(\"TICK\");\r\n//   console.log(ctx);\r\n\r\n//   ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n//   // ctx.fillRect(...coords);\r\n//   ctx.save();\r\n//   ctx.translate(canvas.width / 2, canvas.height / 2);\r\n//   ctx.rotate(-Math.PI / 180 * 20)\r\n//   ctx.fillStyle = fillColor;\r\n//   // ctx.fillRect(...coords);\r\n//   //rotates sqaure\r\n//   // ctx.fillRect(-175, -175, 350, 350);\r\n//   ctx.beginPath();\r\n//   ctx.arc(0, 0, 25, 0, 2 * Math.PI);\r\n//   ctx.fillStyle = fillColor;\r\n//   ctx.fill();\r\n//   ctx.stroke();\r\n\r\n//   //draw triangle \r\n//   ctx.beginPath();\r\n//   canvas_arrow(ctx, 30, 200, 35, 0);\r\n//   ctx.stroke();\r\n//   // save();\r\n//   //save canvas back to origin position\r\n//   ctx.translate(-canvas.width / 2, -canvas.height / 2);\r\n//   // ctx.rotate(Math.PI / 180 * 20);\r\n//   ctx.save();\r\n\r\n//   // ctx.restore();\r\n//   ctx.translate(1000, 1000);\r\n//   ctx.rotate(-Math.PI / 180 * 4.1);\r\n//   ctx.translate(50, 0);\r\n//   // ctx.save();\r\n//   // ctx.beginPath();\r\n//   // ctx.lineTo(50,0);\r\n//   // ctx.stroke();\r\n//   // ctx.restore();\r\n//   mercury();\r\n//   ctx.save();\r\n//   // rotateMercury();\r\n//   ctx.restore();\r\n//   ctx.restore();\r\n//   // ctx.restore();\r\n//   // window.requestAnimationFrame(rotateSun);\r\n// }\r\n\r\n// function canvas_arrow(ctx, fromx, fromy, tox, toy) {\r\n//   var headlen = 10; // length of head in pixels\r\n//   var dx = tox - fromx;\r\n//   var dy = toy - fromy;\r\n//   var angle = Math.atan2(dy, dx);\r\n\r\n//   // context.moveTo(fromx, fromy);\r\n//   //tail of arrow change 35 based off radius of curcle\r\n//   ctx.arc(0, 0, 35, 0, Math.PI);\r\n//   ctx.moveTo(tox, toy);\r\n//   //arrows for arrow\r\n//   ctx.lineTo(tox, toy);\r\n//   ctx.lineTo(tox - headlen * Math.cos(angle - Math.PI / 6), toy - headlen * Math.sin(angle - Math.PI / 6));\r\n//   ctx.moveTo(tox, toy);\r\n//   ctx.lineTo(tox - headlen * Math.cos(angle + Math.PI / 6), toy - headlen * Math.sin(angle + Math.PI / 6));\r\n// }\r\n\r\n// function mercury() {\r\n//   // ctx.save();\r\n\r\n//   // ctx.translate(50, 0);\r\n//   ctx.beginPath();\r\n//   // ctx.arc(150, -150, 5, 0, 2 * Math.PI);\r\n//   ctx.arc(20, -20, 25, 0, 2 * Math.PI);\r\n//   ctx.fillStyle = \"red\";\r\n//   ctx.fill();\r\n//   ctx.stroke();\r\n\r\n//   // save();\r\n//   //save canvas back to origin position\r\n\r\n//   // ctx.rotate(-Math.PI / 180 * 20);\r\n// }\r\n\r\n// function rotateMercury() {\r\n\r\n//   ctx.rotate(-Math.PI / 180 * 90)\r\n//   // ctx.translate(0, 28.5)`\r\n//   ctx.beginPath();\r\n//   canvas_arrow(ctx, 30, 200, 35, 0);\r\n//   ctx.stroke();\r\n//   ctx.translate(-canvas.width / 2, -canvas.height / 2);\r\n//   // ctx.save();\r\n\r\n// }\r\n\r\n// function draw() {\r\n//   mercuryOrbitPattern();\r\n// }\r\n\r\n// function init() {\r\n//   // window.requestAnimationFrame(rotateSun);\r\n//   // draw();\r\n//   // setInterval(rotateMercury, 500);\r\n//   setInterval(rotateSun, 1000);\r\n// }\r\n\r\n// init();\r\n\r\n// function getJulianDate(Year, Month, Day) {\r\n//   let inputDate = new Date(Year, Month, Math.floor(day));\r\n//   let switchDate = new Date(\"1582\", \"10\", \"15\");\r\n\r\n//   let isGregorianDate = inputDate >= switchDate;\r\n\r\n//   if (Year < 0) {\r\n//     Year++;\r\n//   }\r\n\r\n//   if (Month === 1 || Month === 2) {\r\n//     Year = Year - 1;\r\n//     Month = Month + 12;\r\n//   }\r\n\r\n//   let a = Math.floor(Year / 100);\r\n//   let b = 2 - A + Math.floor(A / 4);\r\n\r\n//   if (!isGregorianDate) {\r\n//     b = 0;\r\n//   }\r\n\r\n//   return ((Math.floor(362.25 * Year)) + (Math.floor(30.6001 * (Month + 1))) + Day + 1720994.5 + b);\r\n// }\r\n\r\n// console.log(canvas);\r\n// console.log(center);\r\n//     }\r\n// createCanvas() {\r\n//   document.body.append(this.canvas);\r\n// }\r\n// drawSquare() {\r\n//   this.ctx.fillStyle = this.fillColor;\r\n//   this.ctx.fillRect(...this.coords);\r\n// }\r\n// updateSquare() {\r\n//   this.coords = this.coords.map((coord) => (coord += 1 * this.animationDir));\r\n// }\r\n\r\n// clearSquare() {\r\n//   this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n// }\r\n\r\n// reverseAnimation() {\r\n//   this.animationDir *= -1;\r\n// }\r\n// clearCanvas() {\r\n//   this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n// }\r\n// setColor(color) {\r\n//   this.fillColor = color;\r\n//   document.body.style.backgroundColor = color;\r\n//   document.body.style.filter = `brightness(150%)`;\r\n// }\r\n// }\r\n\r\n// export default canvasExample;\r\n\r\n\r\nconst canvas = document.getElementById('main-canvas');\r\nconst ctx = canvas.getContext('2d');\r\nconst details = document.getElementById(\"planet-details\");\r\nconst container = document.getElementById(\"container\");\r\nconst planetName = document.getElementById(\"planet-name\");\r\nconst orbitPeriod = document.getElementById(\"orbital-period\");\r\nconst planetTemp = document.getElementById(\"planet-temp\");\r\nconst planetP = document.getElementById(\"planet-name-p\");\r\nconst orbitalP = document.getElementById(\"orbital-period-p\");\r\nconst tempP = document.getElementById(\"planet-temp-p\");\r\nconst planetTitle = document.getElementById('planet-name-title');\r\nconst orbitalTitle = document.getElementById('orbital-period-title');\r\nconst tempTitle = document.getElementById(\"planet-temp-title\");\r\n\r\n// const something = document.getElementsByClassName('planet');\r\n// console.log(something)\r\nconsole.log(canvas);\r\n// canvas.width = window.innerWidth;\r\ncanvas.width = 950;\r\n// canvas.height = innerHeight;\r\ncanvas.height = 750;\r\n\r\n// addEventListener('resize', () => {\r\n//   cavnas.width = innerWidth;\r\n//   cavnas.height = innerHeight;\r\n// });\r\n\r\nfunction isIntersect(point, planet) {\r\n  // console.log(Math.sqrt((point.x-planet.x) ** 2 + (point.y - planet.y) ** 2))\r\n  // console.log(planet.radius);\r\n  // return Math.sqrt((point.x-planet.x) + (point.y - planet.y)) < planet.radius;\r\n  return Math.sqrt((point.x - planet.x) ** 2 + (point.y - planet.y) ** 2) < planet.radius;\r\n}\r\n\r\nfunction isClicked(pointer, planet) {\r\n  return (pointer.y > planet.y && pointer.y < planet.y + planet.radius && pointer.x > planet.x && pointer.x < planet.x + planet.radius)\r\n}\r\n\r\n\r\nclass Planet {\r\n  constructor(planetName, orbitPeriod, planetTemp, x, y, radius, color, velocity, orbitRadius) {\r\n    this.planetName = planetName;\r\n    this.orbitPeriod = orbitPeriod;\r\n    this.planetTemp = planetTemp;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = radius;\r\n    this.color = color;\r\n    this.velocity = velocity;\r\n    this.orbitRadius = orbitRadius;\r\n\r\n    this.startPos = {\r\n      x,\r\n      y\r\n    }\r\n    this.radian = 0;\r\n  }\r\n\r\n  draw() {\r\n\r\n    ctx.beginPath();\r\n    ctx.lineWidth = 2;\r\n    ctx.arc(this.startPos.x, this.startPos.y, this.orbitRadius, 0, Math.PI * 2);\r\n    ctx.strokeStyle = 'rgb(255, 255, 255, 0.35)';\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\r\n    ctx.fillStyle = this.color;\r\n    ctx.fill();\r\n    ctx.closePath();\r\n    // ctx.stroke();\r\n  }\r\n\r\n  update() {\r\n\r\n    this.draw();\r\n\r\n    this.radian += this.velocity;\r\n\r\n    this.x = this.startPos.x + Math.cos(this.radian) * this.orbitRadius;\r\n    this.y = this.startPos.y + Math.sin(this.radian) * this.orbitRadius;\r\n\r\n    // console.log(this.x);\r\n    // console.log(this.y);\r\n    // this.x += this.velocity;\r\n    // this.y += this.velocity;\r\n  }\r\n}\r\n\r\nconst getPlanets = (planetName, orbitPeriod, planetTemp, radius, velocity, orbitRadius, color) =>\r\n  new Planet(planetName, orbitPeriod, planetTemp, canvas.width / 2, canvas.height / 2, radius, color, velocity / 1000, orbitRadius);\r\n\r\n\r\nlet planets;\r\nfunction init() {\r\n  planets = []\r\n\r\n  // planets.push(new Planet(canvas.width / 2, canvas.height / 2, 25, 'yellow', 0, 0));\r\n  // planets.push(new Planet(canvas.width / 2, canvas.height / 2, 10, 'red', 0.005, 65));\r\n  // planets.push(new Planet(canvas.width / 2, canvas.height / 2, 15, 'red', 0.005, 65));\r\n  planets.push(getPlanets(\"Sun is not a planet\", \"N/A\", \"HOT\", 12, 0, 0, 'yellow'));\r\n  planets.push(getPlanets(\"Mercury\", \"88 days\", \"167 Celsius\", 5, 8, 35, \"red\"));\r\n  planets.push(getPlanets(\"Venus\", \"224.7 days\", \"464 Celsius\", 10, 5, 60, \"orange\"));\r\n  planets.push(getPlanets(\"Earth\", \"365 days\", \"15 Celsius\", 15, 4, 90, \"blue\"));\r\n  planets.push(getPlanets(\"Mars\", \"27.3 days\", \"-20 Celsius\",18, 3.5, 135, \"red\"));\r\n  planets.push(getPlanets(\"Jupiter\", \"4,331 days\", \"-110 Celsius\",23, 3, 185, \"orange\"));\r\n  planets.push(getPlanets(\"Saturn\", \"10,747 days\", \"-140 Celsius\", 18, 2.25, 235, \"yellow\"));\r\n  planets.push(getPlanets(\"Uranus\", \"30,589 days\", \"-195 Celsius\",13, 2, 285, \"blue\"));\r\n  planets.push(getPlanets(\"Neptune\", \"59,800 days\", \"-200 Celsius\", 20, 1.5, 335, \"purple\"));\r\n  planets.push(getPlanets(\"pluto\", \"90,560 days\", \"-225 Celsius\", 7, 1, 375, \"gray\"));\r\n\r\n  // let planet1 = planets.filter(planet => {\r\n  //   return planet.planetId === 1;\r\n  // })\r\n\r\n  // for (let i = 0; i < planets.length; i++) {\r\n\r\n  //   planets[i].draw();\r\n  // }\r\n\r\n}\r\n\r\nfunction animate() {\r\n  requestAnimationFrame(animate);\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.fillStyle = 'rgb(0, 0, 0)';\r\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n  planets.forEach(planet => {\r\n    planet.update();\r\n  })\r\n}\r\n\r\n\r\n// console.log(planets);\r\n\r\ninit();\r\nanimate();\r\n\r\n\r\ncanvas.addEventListener('click', (e) => {\r\n  const mousePos = {\r\n    x: e.offsetX,\r\n    y: e.offsetY\r\n    // x: e.clientX - canvas.offsetLeft,\r\n    // y: e.clientY - canvas.offsetTop \r\n  };\r\n\r\n  // console.log(\"mouse x\", mousePos.x);\r\n  // console.log(\"mouse y\", mousePos.y);\r\n\r\n\r\n  planets.forEach(planet => {\r\n    // console.log(\"planet x\", planet.x);\r\n    // console.log(\"planet y\", planet.y);\r\n    console.log(\"isIntersect\", isIntersect(mousePos, planet));\r\n    if (isIntersect(mousePos, planet)) {\r\n\r\n      console.log(\"PLANET CLICK\", planet.planetName);\r\n      console.log(\"out of if slide\", details.getAttribute(\"slide\"))\r\n      if (details.getAttribute(\"slide\") === \"in\" || details.getAttribute(\"slide\") === \"out\") {\r\n        return;\r\n      }\r\n      // if (details.getAttribute(\"slide\") === \"in\") {\r\n      //   console.log(\"above onanmation\", details.getAttribute(\"slide\"))\r\n      //   details.onanimationend = () => {\r\n      //     details.setAttribute(\"slide\", \"next\");\r\n      //     console.log(\"inside if slide\", details.getAttribute(\"slide\"))\r\n      //     setTimeout(() => {\r\n      //       details.setAttribute(\"slide\", \"out\")\r\n      //       console.log(\"inside timeout slide\", details.getAttribute(\"slide\"))\r\n      //       details.onanimationend = () => {\r\n      //         console.log('382', details.onanimationend);\r\n      //         details.onanimationend = null;\r\n      //       };\r\n      //     }, 4500);\r\n      //   }\r\n      // } else {\r\n      details.setAttribute(\"slide\", \"in\")\r\n      setTimeout(() => {\r\n        details.setAttribute(\"slide\", \"out\")\r\n       \r\n      }, 5000);\r\n\r\n      // }\r\n      details.onanimationend = () => {\r\n          if (details.getAttribute(\"slide\") === \"out\") {\r\n            details.setAttribute(\"slide\", \"\");\r\n          }\r\n      }\r\n\r\n      console.log(\"planetP\", planetP);\r\n\r\n      planetTitle.innerHTML = \"Planet: \";\r\n      orbitalTitle.innerHTML = \"Orbital Period: \"; \r\n      tempTitle.innerHTML = \"Planet Temperature: \";\r\n      planetP.innerHTML = planet.planetName;\r\n      orbitalP.innerHTML = planet.orbitPeriod;\r\n      tempP.innerHTML = planet.planetTemp;\r\n\r\n    }\r\n  });\r\n\r\n  // planets.forEach( planet => {\r\n  //   console.log(\"planet x\", planet.x);\r\n  //   console.log(\"planet y\", planet.y);\r\n  //   console.log(\"isClicked\", isClicked(mousePos, planet));\r\n  //   if(isClicked(mousePos, planet)) {\r\n\r\n  //     console.log(\"PLANET CLICK\", planet.planetId);\r\n  //   }\r\n  // });\r\n})\r\n\r\n","const modalTriggers = document.querySelectorAll('.popup-trigger');\r\nconst modalClose = document.querySelector('.popup-modal__close');\r\nconst bodyBlackout = document.querySelector('.body-blackout');\r\n\r\nmodalTriggers.forEach(trigger => {\r\n    trigger.addEventListener('click', () => {\r\n        const { popupTrigger } = trigger.dataset\r\n        const popupModal = document.querySelector(`[data-popup-modal=\"one\"]`)\r\n        \r\n        console.log(\"popupModal\", popupModal);\r\n\r\n        popupModal.classList.add('is--visible')\r\n        bodyBlackout.classList.add('is-blacked-out')\r\n\r\n        popupModal.querySelector('.popup-modal__close').addEventListener('click', () => {\r\n            popupModal.classList.remove('is--visible')\r\n            bodyBlackout.classList.remove('is-blacked-out')\r\n        })\r\n\r\n        bodyBlackout.addEventListener('click', () => {\r\n            popupModal.classList.remove('is--visible')\r\n            bodyBlackout.classList.remove('is-blacked-out')\r\n        })\r\n    })\r\n})","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"sourceRoot":""}